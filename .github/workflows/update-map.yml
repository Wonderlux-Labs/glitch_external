name: Update Cube Map
on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:       # Allow manual triggers
  push:
    branches: [ main ]     # Also update on pushes

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write      # Needed to commit updates
      pages: write         # Needed for GitHub Pages
      id-token: write      # Needed for Pages deployment
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Fetch GPS Data
        env:
          PLAYA_API_URL: ${{ secrets.PLAYA_API_URL }}
        run: |
          echo "Fetching data from: $PLAYA_API_URL"
          
          # Fetch current location with timeout and fallback
          timeout 30 curl -f -s "$PLAYA_API_URL/api/v1/gps/location" > location.json || {
            echo '{"error":"API unavailable","timestamp":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'","lat":40.7864,"lng":-119.2065,"source":"fallback"}' > location.json
            echo "Failed to fetch location, using fallback"
          }
          
          # Fetch landmarks (these rarely change, so failure is less critical)
          timeout 30 curl -f -s "$PLAYA_API_URL/api/v1/gps/landmarks" > landmarks.json || {
            echo "Failed to fetch landmarks, using existing file"
            test -f landmarks.json || cp public/geojson/burning_man_landmarks.json landmarks.json
          }
          
          # Debug output
          echo "Location data:"
          cat location.json | head -c 200
          echo -e "\n..."
          
      - name: Generate Static Page
        run: |
          # Use the static template
          cp static-template.html index.html
          
          # Create the data injection script
          cat > data_injection.js << 'EOF'
          <script>
          window.CUBE_LOCATION = LOCATION_DATA_PLACEHOLDER;
          window.LANDMARKS_DATA = LANDMARKS_DATA_PLACEHOLDER;
          window.LAST_UPDATE = 'LAST_UPDATE_PLACEHOLDER';
          window.STATIC_MODE = true;
          </script>
          EOF
          
          # Replace placeholders with actual data
          sed -i "s/LOCATION_DATA_PLACEHOLDER/$(cat location.json | jq -c .)/g" data_injection.js
          sed -i "s/LANDMARKS_DATA_PLACEHOLDER/$(cat landmarks.json | jq -c .)/g" data_injection.js
          sed -i "s/LAST_UPDATE_PLACEHOLDER/$(date -u +%Y-%m-%dT%H:%M:%SZ)/g" data_injection.js
          
          # Inject the data into the HTML
          sed -i '/<!--DATA_INJECTION_POINT-->/r data_injection.js' index.html
          sed -i '/<!--DATA_INJECTION_POINT-->/d' index.html
          
          # Copy all static assets
          cp -r public/* ./
          
          # Debug: Show what we generated
          echo "Generated index.html size: $(wc -c < index.html) bytes"
          echo "First 500 chars of location data:"
          head -c 500 location.json
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4